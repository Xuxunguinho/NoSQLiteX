# This is a basic workflow to help you get started with Actions

name: Deploy Nuget Package

env:
  PROJECT_PATH: "NoSqliteX/NoSqliteX.csproj"
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output
  NUGET_SOURCE_URL: "https://api.nuget.org/v3/index.json"
  #NoSqliteX_VERSION: '0.1.2'

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
      - "v*"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "2.x"

      - name: Restore packages
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build Project
        run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release
      - name: "Get Version"
        id: version
        uses: battila7/get-version-action@v2

      - name: "Pack project"
        run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release --include-symbols -p:PackageVersion=${{ steps.version.outputs.version-without-v }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

      - name: Push package
        run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg --skip-duplicate -k ${{ secrets.NUGET_AUTH_KEY }} -s ${{ env.NUGET_SOURCE_URL}}

      - name: "Package push On github Packages"
        run: dotnet push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source "https://nuget.pkg.github.com/xuxunguinho/index.json" --skip-duplicate
